services:
  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5445:5432"
    volumes:
      - ./volumes/shareit:/var/lib/postgresql/data/
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - POSTGRES_DB=shareit
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: db-init-test
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://dbuser:12345@db:5432/shareit -v ON_ERROR_STOP=1 <<-EOSQL
        drop table IF EXISTS users CASCADE;
        drop table IF EXISTS items CASCADE;
        drop table IF EXISTS bookings CASCADE;
        drop table IF EXISTS requests CASCADE;
        drop table IF EXISTS comments CASCADE;
        
        create TABLE IF NOT EXISTS users (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(512) NOT NULL,
        CONSTRAINT pk_user PRIMARY KEY (id),
        CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
        );
        
        create TABLE IF NOT EXISTS requests (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        description VARCHAR(2000),
        requestor_id BIGINT NOT NULL,
        created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        CONSTRAINT pk_request PRIMARY KEY (id),
        CONSTRAINT fk_request_requestor FOREIGN KEY (requestor_id) REFERENCES users(id)
        );
        
        create TABLE IF NOT EXISTS items (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        name VARCHAR(255) NOT NULL,
        description VARCHAR(2000),
        available BOOLEAN DEFAULT TRUE,
        owner_id BIGINT NOT NULL,
        item_request_id BIGINT,
        CONSTRAINT pk_item PRIMARY KEY (id),
        CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users(id),
        CONSTRAINT fk_item_item_request FOREIGN KEY (item_request_id) REFERENCES requests(id)
        );
        
        create TABLE IF NOT EXISTS bookings (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        item_id BIGINT NOT NULL,
        booker_id BIGINT NOT NULL,
        status VARCHAR(50),
        CONSTRAINT pk_booking PRIMARY KEY (id),
        CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items(id),
        CONSTRAINT fk_booking_booker FOREIGN KEY (booker_id) REFERENCES users(id)
        );
        
        create TABLE IF NOT EXISTS comments (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        text VARCHAR(2000),
        item_id BIGINT NOT NULL,
        author_id BIGINT NOT NULL,
        created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        CONSTRAINT pk_comment PRIMARY KEY (id),
        CONSTRAINT fk_comment_item FOREIGN KEY (item_id) REFERENCES items(id),
        CONSTRAINT fk_comment_author FOREIGN KEY (author_id) REFERENCES users(id)
        );  
        EOSQL

